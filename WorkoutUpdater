def prioritize_workouts(bmi_category, days_available, workout_duration=45, weeks=8):
    workout_plans = {
        'Underweight': [
            "Strength Training - Squats (3x8 RPE 7, Rest 90s), Deadlifts (3x8 RPE 7, Rest 90s), Bench Press (3x8 RPE 7, Rest 60s)",
            "Moderate Cardio - Light jog (20 mins), Cycling (15 mins), Core: Plank (3x30s, Rest 30s), Russian Twists (3x20, Rest 30s)",
            "Strength Training - Lunges (3x10 RPE 6, Rest 60s), Rows (3x8 RPE 7, Rest 60s), Overhead Press (3x8 RPE 7, Rest 60s)",
            "Full Body - Kettlebell Swings (3x15 RPE 6, Rest 45s), Push-Ups (3x12 RPE 7, Rest 45s), Burpees (3x8 RPE 8, Rest 60s)",
            "Active Recovery - Yoga (15 mins), Walk (30 mins), Stretching (10 mins)"
        ],
        'Normal': [
            "Strength Training - Squats (3x10 RPE 7, Rest 90s), Deadlifts (3x10 RPE 7, Rest 90s), Push-Ups (3x15 RPE 6, Rest 45s)",
            "HIIT - Jumping Jacks (30s), Mountain Climbers (30s), High Knees (30s), Push-Ups (30s), Rest (30s) x 4 rounds",
            "Strength Focus - Lunges (3x10 RPE 7, Rest 60s), Pull-Ups (3x6 RPE 8, Rest 60s), Shoulder Press (3x8 RPE 7, Rest 60s)",
            "Cardio & Core - Rowing (15 mins), Cycling (20 mins), Bicycle Crunches (3x15, Rest 30s), Supermans (3x15, Rest 30s)",
            "Flexibility & Mobility - Yoga (20 mins), Foam Rolling (10 mins)"
        ],
        'Overweight': [
            "Low-Impact Cardio - Brisk Walk (30 mins), Swimming (20 mins), Step-Ups (3x10, Rest 30s), Wall Push-Ups (3x10, Rest 30s), Side Leg Raises (3x12, Rest 30s)",
            "Strength - Squats (3x8 RPE 6, Rest 60s), Resistance Band Rows (3x10 RPE 7, Rest 60s), Glute Bridges (3x10 RPE 6, Rest 45s)",
            "Cardio Circuit - Walk (15 mins), Marching in Place (3x1 min), Chair Step-Ups (3x10, Rest 30s), Bird-Dogs (3x10, Rest 30s)",
            "Strength & Core - Kettlebell Deadlifts (3x8 RPE 7, Rest 60s), Seated Rows (3x10 RPE 6, Rest 60s), Side Planks (3x20s, Rest 30s)",
            "Recovery - Swimming (20 mins), Yoga (10 mins), Stretching (10 mins)"
        ],
        'Obese': [
            "Low-Impact Cardio - Walk (30 mins), Swimming (20 mins), Wall Sit (3x20s, Rest 30s), Chair Squats (3x8, Rest 30s), Seated Side Leg Lifts (3x10, Rest 30s)",
            "Strength Focus - Wall Push-Ups (3x10 RPE 6, Rest 45s), Resistance Band Rows (3x10 RPE 6, Rest 45s), Chair-Assisted Lunges (3x8 RPE 5, Rest 45s)",
            "Cardio Circuit - Marching in Place (3x1 min), Side Steps (3x20), Step-Ups (3x10, Rest 30s), Bird-Dogs (3x8, Rest 30s)",
            "Strength & Core - Bodyweight Squats (3x8 RPE 5, Rest 45s), Seated Shoulder Press (3x10 RPE 6, Rest 45s), Russian Twists (3x15, Rest 30s)",
            "Recovery - Yoga (15 mins), Light Walk (30 mins), Stretching (10 mins)"
        ]
    }

    if bmi_category not in workout_plans:
        return "Invalid BMI category. Choose from 'Underweight', 'Normal', 'Overweight', or 'Obese'."

    days_available = min(days_available, len(workout_plans[bmi_category]))
    selected_workouts = workout_plans[bmi_category][:days_available]

    # Progression loop
    progression_plan = ""
    for week in range(1, weeks + 1):
        if week % 2 == 0:  # Every two weeks, increase intensity
            progression_plan += f"Week {week}: Increase reps by 1-2, RPE +1, or add an extra set where manageable.\n"
        else:
            progression_plan += f"Week {week}: Maintain current intensity. Focus on form and consistency.\n"

    return f"Your {days_available}-day workout plan for {bmi_category} BMI (Daily Limit: {workout_duration} mins):\n" + "\n".join(selected_workouts) + f"\n\nProgression Plan:\n{progression_plan}"


# Example usage
bmi_category = input("Enter BMI category (Underweight, Normal, Overweight, Obese): ").capitalize()
days_available = int(input("Enter number of days you can work out this week: "))
workout_duration = int(input("Enter your daily workout time limit in minutes: "))
weeks = int(input("Enter how many weeks you plan to follow the program: "))
print(prioritize_workouts(bmi_category, days_available, workout_duration, weeks))
