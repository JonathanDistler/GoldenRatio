def rpe_calculator(one_rep_max, reps, rpe):
    """
    Calculate estimated weight based on RPE.
    Uses the RPE chart to determine percentage of 1RM.
    
    :param one_rep_max: User's one-rep max (1RM) in lbs or kg
    :param reps: Number of repetitions
    :param rpe: Rate of Perceived Exertion (RPE) from 6 to 10
    :return: Estimated weight to lift
    """
    # RPE percentage chart based on reps and RPE
    rpe_chart = {
        1: {10: 1.00, 9.5: 0.975, 9: 0.955, 8.5: 0.94, 8: 0.922, 7.5: 0.907, 7: 0.892, 6.5: 0.877, 6: 0.862},
        2: {10: 0.955, 9.5: 0.937, 9: 0.922, 8.5: 0.907, 8: 0.892, 7.5: 0.877, 7: 0.862, 6.5: 0.848, 6: 0.833},
        3: {10: 0.922, 9.5: 0.907, 9: 0.892, 8.5: 0.878, 8: 0.863, 7.5: 0.848, 7: 0.833, 6.5: 0.819, 6: 0.805},
        4: {10: 0.892, 9.5: 0.878, 9: 0.863, 8.5: 0.848, 8: 0.835, 7.5: 0.820, 7: 0.805, 6.5: 0.791, 6: 0.777},
        5: {10: 0.863, 9.5: 0.848, 9: 0.835, 8.5: 0.820, 8: 0.807, 7.5: 0.792, 7: 0.778, 6.5: 0.764, 6: 0.750},
    }
    
    if reps not in rpe_chart or rpe not in rpe_chart[reps]:
        return "Invalid reps or RPE value."
    
    percentage = rpe_chart[reps][rpe]
    estimated_weight = one_rep_max * percentage
    
    return round(estimated_weight, 2)
